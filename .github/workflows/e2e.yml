name: E2E Test

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  AWS_REGION: us-west-2

permissions:
  id-token: write
  contents: write 

jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      table: ${{ steps.gen-table-name.outputs.table }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        check-latest: true
        cache: 'yarn'
        cache-dependency-path: tests/infra/yarn.lock
    - name: Install AWS CDK and yarn
      run: |
        npm -g i npm
        npm -g i yarn
        npm -g i aws-cdk
    - name: generate table name
      id: gen-table-name
      run: echo "::set-output name=table::csv2dynamodb-test-$(date +%Y%m%d-%H%M%S)"
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}
    - name: Create for testing table
      env:
        TABLE_NAME: ${{ steps.gen-table-name.outputs.table }}
      run: |
        cd tests/infra
        yarn install
        cdk deploy -c name="${TABLE_NAME}" --require-approval=never

  build:
    needs: [setup]
    runs-on: ubuntu-20.04

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        cache-key: ${{ env.cache-key }}
    - name: Update Rust toolchain
      run: rustup update
    - uses: actions/checkout@v2
    - name: Run E2E test
      run: cargo run --verbose -- --file-path ./tests/test_data2.csv --table ${{ needs.setup.outputs.table }}

  tearDown:
    runs-on: ubuntu-20.04
    needs: [setup, build]
    if: ${{ always() }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        check-latest: true
        cache: 'yarn'
        cache-dependency-path: tests/infra/yarn.lock
    - name: Install AWS CDK and yarn
      run: |
        npm -g i npm
        npm -g i yarn
        npm -g i aws-cdk
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}
    - name: Remove for testing table
      env:
        TABLE_NAME: ${{ needs.setup.outputs.table }}
      run: |
        cd tests/infra
        yarn install
        cdk destroy -c name="${TABLE_NAME}" -f
